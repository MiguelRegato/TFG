name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build backend and run tests
        working-directory: ./TFGWordle
        run: mvn -B verify

      - name: Start backend server
        working-directory: ./TFGWordle
        run: nohup java -jar target/*.jar &

      - name: Wait for backend to be ready
        run: npx wait-on http://localhost:9090

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Run Playwright tests with coverage
        working-directory: ./frontend
        run: npm run e2e

      - name: Run unified Sonar analysis
        working-directory: ./
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: npx sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }}
