name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: Wordle
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 9d(gd732^Y 
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Load environment variables from .env
        run: echo "Loading .env variables" cat .env

      - name: Export env variables from .env
        run: set -a source .env set +a
        shell: bash

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build backend and run tests
        working-directory: ./TFGWordle
        env:
          SERVER_PORT: 9090
          DB_HOST: db
          DB_PORT: 5432
          DB_NAME_POSTGRES: Wordle
          DB_USER_POSTGRES: postgres
          DB_PASSWORD_POSTGRES: 9d(gd732^Y
          SPRING_JPA_HIBERNATE_DDL_AUTO: update
          JWT_SECRET: 3)FU%02o;q!!d8+0KZT-Y{^GL:wiWB
          JWT_EXPIRATION: 36000
        run: mvn -B verify

      - name: Start backend server
        working-directory: ./TFGWordle
        env:
          SERVER_PORT: 9090
          DB_HOST: db
          DB_PORT: 5432
          DB_NAME_POSTGRES: Wordle
          DB_USER_POSTGRES: postgres
          DB_PASSWORD_POSTGRES: 9d(gd732^Y
          SPRING_JPA_HIBERNATE_DDL_AUTO: update
          JWT_SECRET: 3)FU%02o;q!!d8+0KZT-Y{^GL:wiWB
          JWT_EXPIRATION: 36000
        run: nohup java -jar target/*.jar &

      - name: Wait for backend to be ready
        run: npx wait-on http://localhost:9090

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Run Playwright tests with coverage
        working-directory: ./frontend
        run: npm run e2e

      - name: Run unified Sonar analysis
        working-directory: ./
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: npx sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }}
